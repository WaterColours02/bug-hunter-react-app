{"version":3,"sources":["components/Login.js","base.js","components/SignIn.js","components/NewIssueForm.js","components/EditIssue.js","components/Issue.js","components/App.js","components/Router.js","index.js"],"names":["React","Component","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","SignIn","submitedUserId","createRef","state","uid","userId","owner","signIn","event","preventDefault","console","log","current","value","toUpperCase","props","history","push","authenticate","provider","authProvider","auth","signInWithPopup","then","authHandler","className","onSubmit","this","type","required","placeholder","ref","NewIssueForm","descRef","natureRef","severityRef","priorityRef","assignedToRef","dateCreatedRef","expectedCompletedDateRef","status","createIssue","issue","desc","nature","severity","priority","assignedTo","dateCreated","Date","now","toString","expectedCompleteDate","addIssue","currentTarget","reset","htmlFor","name","EditIssue","handleUpdateSubmit","submitUpdatedIssue","toggleEditModal","handleChange","target","setState","editOpen","details","bind","key","index","updateIssue","onClick","onChange","Issue","completeIssue","deleteIssue","App","issues","searchString","filteredIssues","filterIssues","Object","keys","filter","values","some","val","toLowerCase","includes","reduce","obj","undefined","onSearchChange","toLocaleLowerCase","params","match","syncState","context","map","Router","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.ae5dc78f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n\r\n\r\n        return (\r\n            <nav className=\"login\">\r\n            <h2>Login</h2>\r\n            <p>Please login to view your projects</p>\r\n            <button className=\"github\" onClick={() => this.props.authenticate('Github') }>\r\n                    Login with Github\r\n                </button>\r\n\r\n                <button className=\"google\" onClick={() => this.props.authenticate('Google') }>\r\n                    Login with Google\r\n                </button>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"process.env.REACT_APP_API_KEY\",\r\n  authDomain: \"bug-hunter-issue-tracker.firebaseapp.com\",\r\n  databaseURL: \"https://bug-hunter-issue-tracker-default-rtdb.firebaseio.com\",\r\n  projectId: \"bug-hunter-issue-tracker\",\r\n  storageBucket: \"bug-hunter-issue-tracker.appspot.com\",\r\n  messagingSenderId: \"112444272666\",\r\n  appId: \"1:112444272666:web:198f04392279bd6b8921a3\",\r\n  measurementId: \"G-XMQJB8WPLS\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\nexport default base;\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass SignIn extends React.Component {\r\n  submitedUserId = React.createRef();\r\n\r\n  state = {\r\n    uid: null,\r\n    userId: null,\r\n    owner: null,\r\n  };\r\n\r\n  signIn = (event) => {\r\n    // 1, prevent default / page relaod\r\n    event.preventDefault();\r\n    // 2. get the text from the input\r\n    console.log(this.submitedUserId.current.value);\r\n    const userId = this.submitedUserId.current.value.toUpperCase();\r\n    //3. change the page to the  '/bugtracker/userId' submited\r\n    this.props.history.push(`/bugtracker/${userId}`);\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='sign-in-wrapper'>\r\n        <form\r\n          className='sign-in'\r\n          onSubmit={this.signIn}\r\n        >\r\n          <h1 className='app-title'>Bug Hunter - Bug Tracker</h1>\r\n          <h2 className='sign-in-prompt'>Please sign in.</h2>\r\n\r\n          <input\r\n            type='text'\r\n            required\r\n            placeholder='User Name'\r\n            ref={this.submitedUserId}\r\n          />\r\n\r\n          <button\r\n            className='sign-in-button'\r\n            type='submit'\r\n          >\r\n            Sign In\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nclass NewIssueForm extends React.Component {\r\n  descRef = React.createRef();\r\n  natureRef = React.createRef();\r\n  severityRef = React.createRef();\r\n  priorityRef = React.createRef();\r\n  assignedToRef = React.createRef();\r\n  dateCreatedRef = React.createRef();\r\n  expectedCompletedDateRef = React.createRef();\r\n  status = React.createRef();\r\n\r\n  createIssue = (event) => {\r\n    event.preventDefault();\r\n\r\n    const issue = {\r\n      desc: this.descRef.current.value,\r\n      nature: this.natureRef.current.value,\r\n      severity: this.severityRef.current.value,\r\n      priority: this.priorityRef.current.value,\r\n      assignedTo: this.assignedToRef.current.value,\r\n      dateCreated: new Date(Date.now()).toString(),\r\n      expectedCompleteDate: this.expectedCompletedDateRef.current.value,\r\n      status: \"active\",\r\n    };\r\n    this.props.addIssue(issue);\r\n\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.createIssue}\r\n        className='new-issue-form'\r\n      >\r\n        <h2 className='issue-form-title'>Add a new issue</h2>\r\n        <div className='input-wrapper desc'>\r\n          <label\r\n            htmlFor='desc'\r\n            className='form-label'\r\n          >\r\n            Please describe the bug.\r\n          </label>\r\n          <input\r\n            className='desc-text-are'\r\n            name='desc'\r\n            ref={this.descRef}\r\n            placeholder='Desc'\r\n          />\r\n        </div>\r\n\r\n        <div className='input-wrapper'>\r\n          <label\r\n            htmlFor='nature'\r\n            className='form-label'\r\n          >\r\n            What is the nature of the bug?\r\n          </label>\r\n          <select\r\n            name='nature'\r\n            ref={this.natureRef}\r\n          >\r\n            <option value='security'>Security</option>\r\n            <option value='functionality'>Functionality</option>\r\n            <option value='stability'>Stability</option>\r\n            <option value='design'>Design</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className='input-wrapper'>\r\n          <label\r\n            htmlFor='severity'\r\n            className='form-label'\r\n          >\r\n            How <strong>severe</strong> is the bug?\r\n          </label>\r\n          <select\r\n            name='severity'\r\n            ref={this.severityRef}\r\n            type='text'\r\n            placeholder='Severity'\r\n          >\r\n            <option value='low'>Low</option>\r\n            <option value='medium'>Medium</option>\r\n            <option value='high'>High</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className='input-wrapper'>\r\n          <label\r\n            htmlFor='priority'\r\n            className='form-label'\r\n          >\r\n            What priority should this bug fix take?\r\n          </label>\r\n          <select\r\n            name='priority'\r\n            ref={this.priorityRef}\r\n            type='text'\r\n            placeholder='Priority'\r\n          >\r\n            <option value='low'>Low</option>\r\n            <option value='medium'>Medium</option>\r\n            <option value='high'>High</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className='input-wrapper'>\r\n          <label\r\n            htmlFor=''\r\n            className='form-label'\r\n          >\r\n            What is the expected date the bug will be fixed?\r\n          </label>\r\n          <input\r\n            className='expected-complete-date-text-area'\r\n            name='expectedCompleteDate'\r\n            ref={this.expectedCompletedDateRef}\r\n            placeholder='YYYY/MM/DD'\r\n          />\r\n        </div>\r\n\r\n        <div className='input-wrapper'>\r\n          <label\r\n            htmlFor='assignedTo'\r\n            className='form-label'\r\n          >\r\n            Who is responsible for fixing this bug?\r\n          </label>\r\n          <input\r\n            className='assigned-to-input'\r\n            name='assignedTo'\r\n            ref={this.assignedToRef}\r\n            type='text'\r\n            placeholder='Assigned to'\r\n          />\r\n        </div>\r\n\r\n        <button className='new-issue-submit-button'>Submit New Issue</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewIssueForm;\r\n","import React from \"react\";\r\n\r\nclass EditIssue extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editOpen: false,\r\n      issue: { ...this.props.details }, // Spread the details object into the state\r\n    };\r\n    this.toggleEditModal = this.toggleEditModal.bind(this);\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState({ editOpen: !this.state.editOpen });\r\n  }\r\n\r\n  submitUpdatedIssue(event) {\r\n    event.preventDefault();\r\n\r\n    console.log(\"updating issue\", event);\r\n\r\n    const key = this.props.index;\r\n\r\n    const issue = {\r\n      desc: \"\",\r\n      nature: \"\",\r\n      severity: \"\",\r\n      priority: \"\",\r\n      assignedTo: \"\",\r\n      expectedCompleteDate: \"\",\r\n      status: \"\",\r\n\r\n      // desc: this.state.issue.desc,\r\n      // nature: this.state.issue.nature,\r\n      // severity: this.state.issue.severity,\r\n      // priority: this.state.issue.priority,\r\n      // assignedTo: this.state.issue.assignedTo,\r\n      // expectedCompleteDate: this.state.issue.expectedCompletedDate,\r\n      // status: this.state.issue.status,\r\n    };\r\n\r\n    issue.desc = this.state.issue.desc;\r\n    issue.nature = this.state.issue.nature;\r\n    issue.severity = this.state.issue.severity;\r\n    issue.priority = this.state.issue.priority;\r\n    issue.assignedTo = this.state.issue.assignedTo;\r\n    issue.expectedCompleteDate = this.state.issue.expectedCompleteDate;\r\n    issue.status = this.state.issue.status;\r\n\r\n    this.props.updateIssue(key, issue);\r\n\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  }\r\n\r\n  handleUpdateSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.submitUpdatedIssue(event);\r\n    this.toggleEditModal();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const issue = { ...this.state.issue };\r\n    issue[name] = value;\r\n    this.setState({ issue });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className='edit-issue'\r\n          onClick={this.toggleEditModal}\r\n        >\r\n          Edit\r\n        </button>\r\n\r\n        {this.state.editOpen && (\r\n          <div className='edit-issue-form'>\r\n            <div\r\n              className='modal-overlay'\r\n              // onClick={this.toggleEditModal}\r\n            >\r\n              <form\r\n                onSubmit={this.handleUpdateSubmit}\r\n                className='edit-issue-form'\r\n              >\r\n                <h2 className='edit-issue-form-title'>Edit Issue</h2>\r\n                <div className='input-wrapper desc'>\r\n                  <label\r\n                    htmlFor='desc'\r\n                    className='form-label'\r\n                  >\r\n                    Description\r\n                  </label>\r\n                  <input\r\n                    className='desc-text-area'\r\n                    name='desc'\r\n                    value={this.state.issue.desc}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className='input-wrapper'>\r\n                  <label\r\n                    htmlFor='status'\r\n                    className='form-label'\r\n                  >\r\n                    Status\r\n                  </label>\r\n                  <select\r\n                    name='status'\r\n                    value={this.state.issue.status}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value='active'>Active</option>\r\n                    <option value='completed'>Completed</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='input-wrapper'>\r\n                  <label\r\n                    htmlFor='nature'\r\n                    className='form-label'\r\n                  >\r\n                    Nature\r\n                  </label>\r\n                  <select\r\n                    name='nature'\r\n                    value={this.state.issue.nature}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value='security'>Security</option>\r\n                    <option value='functionality'>Functionality</option>\r\n                    <option value='stability'>Stability</option>\r\n                    <option value='design'>Design</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='input-wrapper'>\r\n                  <label\r\n                    htmlFor='severity'\r\n                    className='form-label'\r\n                  >\r\n                    Severity\r\n                  </label>\r\n                  <select\r\n                    name='severity'\r\n                    type='text'\r\n                    value={this.state.issue.severity}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value='low'>Low</option>\r\n                    <option value='medium'>Medium</option>\r\n                    <option value='high'>High</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='input-wrapper'>\r\n                  <label\r\n                    htmlFor='priority'\r\n                    className='form-label'\r\n                  >\r\n                    Priority\r\n                  </label>\r\n                  <select\r\n                    name='priority'\r\n                    type='text'\r\n                    value={this.state.issue.priority}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value='low'>Low</option>\r\n                    <option value='medium'>Medium</option>\r\n                    <option value='high'>High</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='input-wrapper'>\r\n                  <label\r\n                    htmlFor=''\r\n                    className='form-label'\r\n                  >\r\n                    Expected date of completion\r\n                  </label>\r\n                  <input\r\n                    className='expected-complete-date-text-area'\r\n                    name='expectedCompleteDate'\r\n                    value={this.state.issue.expectedCompleteDate}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className='input-wrapper'>\r\n                  <label\r\n                    htmlFor='assignedTo'\r\n                    className='form-label'\r\n                  >\r\n                    Assigned to:\r\n                  </label>\r\n                  <input\r\n                    className='assigned-to-input'\r\n                    name='assignedTo'\r\n                    type='text'\r\n                    value={this.state.issue.assignedTo}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  type='submit'\r\n                  className='new-issue-submit-button'\r\n                >\r\n                  Update Issue\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditIssue;\r\n","import React from \"react\";\r\n\r\n// import { formatDate } from \"../utility\";\r\n\r\nimport EditIssue from \"./EditIssue\";\r\n\r\nclass Issue extends React.Component {\r\n  render() {\r\n    const {\r\n      desc,\r\n      nature,\r\n      severity,\r\n      priority,\r\n      assignedTo,\r\n      dateCreated,\r\n      status,\r\n      expectedCompleteDate,\r\n    } = this.props.details;\r\n\r\n    // const editOpen = this.props.editOpen;\r\n\r\n    return (\r\n      <div className='issue-wrapper'>\r\n        <li className='list-issue'>\r\n          <h3 className='issue-desc'>{desc}</h3>\r\n\r\n          <div>\r\n            {status === \"active\" ? (\r\n              <p className='issue-active'>Active</p>\r\n            ) : (\r\n              <p className='issue-completed'>Completed</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className='issue-line-div'>\r\n            <p className='title'>Nature: </p>\r\n            <p>{nature}</p>\r\n          </div>\r\n          <div className='issue-line-div'>\r\n            <p className='title'>Severity:</p>\r\n            <p>{severity}</p>\r\n          </div>\r\n          <div className='issue-line-div'>\r\n            <p className='title'>Priority:</p>\r\n            <p>{priority}</p>\r\n          </div>\r\n          <div className='issue-line-div'>\r\n            <p className='title'>Assigned to:</p>\r\n            <p>{assignedTo}</p>\r\n          </div>\r\n          <div className='issue-line-div'>\r\n            <p className='title'>Expected Date of Completion:</p>\r\n            <p>{expectedCompleteDate}</p>\r\n          </div>\r\n          <div className='issue-line-div'>\r\n            <p className='date-created-title'>Date created:</p>\r\n            <p className='date-created'>{dateCreated}</p>\r\n          </div>\r\n          <div className='buttons-wrapper'>\r\n            <button\r\n              className='complete-issue'\r\n              onClick={() => this.props.completeIssue(this.props.index)}\r\n            >\r\n              Complete\r\n            </button>\r\n            <EditIssue\r\n              details={this.props.details}\r\n              addIssue={this.props.addIssue}\r\n              updateIssue={this.props.updateIssue}\r\n              index={this.props.index}\r\n            />\r\n            <button\r\n              className='delete-issue'\r\n              onClick={() => this.props.deleteIssue(this.props.index)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Issue;\r\n","import React from \"react\";\r\nimport NewIssueFrom from \"./NewIssueForm\";\r\nimport Issue from \"./Issue.js\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    issues: {},\r\n    editOpen: false,\r\n    searchString: \"\",\r\n    filteredIssues: {},\r\n  };\r\n\r\n  // life-cycle //\r\n  // -----------------------------------------------------\r\n  // THIS IS HOW YOU LOAD DATA FROM FIREBASE TO STATE\r\n  // -----------------------------------------------------\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    this.ref = base.syncState(`${params.userId}/issues`, {\r\n      context: this,\r\n      state: \"issues\",\r\n      then: () => {\r\n        console.log(this.state.issues); // check if this.state.issues is getting populated with the data from firebase\r\n        this.setState({ filteredIssues: { ...this.state.issues } }, () => {\r\n          console.log(this.state.filteredIssues);\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  filterIssues = () => {\r\n    if (!this.state.searchString) {\r\n      this.setState({ filteredIssues: { ...this.state.issues } });\r\n    } else {\r\n      const filteredIssues = Object.keys(this.state.issues)\r\n        .filter((key) => {\r\n          return Object.values(this.state.issues[key]).some((val) => {\r\n            return (\r\n              typeof val === \"string\" &&\r\n              val.toLowerCase().includes(this.state.searchString)\r\n            );\r\n          });\r\n        })\r\n        .reduce((obj, key) => {\r\n          obj[key] = this.state.issues[key];\r\n          return obj;\r\n        }, {});\r\n      this.setState({ filteredIssues });\r\n    }\r\n  };\r\n\r\n  // ------------------------------------------------------------\r\n\r\n  //methods\r\n  addIssue = (issue) => {\r\n    console.log(\"adding an issue\");\r\n    // 1. take a copy of state\r\n    const issues = { ...this.state.issues };\r\n    // 2. add the new issue to the copy of state\r\n    issues[`issue${Date.now()}`] = issue;\r\n    // 3. update the state object\r\n    this.setState({ issues }, this.filterIssues());\r\n  };\r\n\r\n  updateIssue = (key, issue) => {\r\n    const issues = { ...this.state.issues };\r\n    const searchString = undefined;\r\n    issues[key] = { ...issue };\r\n    this.setState({ issues });\r\n    this.setState({ searchString });\r\n  };\r\n\r\n  deleteIssue = (key) => {\r\n    const issues = { ...this.state.issues };\r\n    const searchString = undefined;\r\n    issues[key] = null;\r\n    this.setState({ issues });\r\n    this.setState({ searchString });\r\n  };\r\n\r\n  completeIssue = (key) => {\r\n    const issues = { ...this.state.issues };\r\n    issues[key].status = \"completed\";\r\n    this.setState({ issues });\r\n  };\r\n\r\n  onSearchChange = (event) => {\r\n    const searchString = event.target.value.toLocaleLowerCase();\r\n    this.setState({ searchString }, this.filteredIssues);\r\n    this.filterIssues();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='header'>\r\n          <h1 className='welcome-user'>\r\n            WELCOME {this.props.match.params.userId}!\r\n          </h1>\r\n        </div>\r\n        <div className='app-grid'>\r\n          <NewIssueFrom addIssue={this.addIssue} />\r\n          <div className='search-bar-container'>\r\n            <input\r\n              className='search-bar'\r\n              type='text'\r\n              placeholder='Search Issues...'\r\n              onChange={this.onSearchChange}\r\n              value={this.state.searchString}\r\n            />\r\n          </div>\r\n          <div className='issues-list'>\r\n            {Object.keys(\r\n              this.state.searchString\r\n                ? this.state.filteredIssues\r\n                : this.state.issues\r\n            ).map((key) => (\r\n              <Issue\r\n                editOpen={this.state.editOpen}\r\n                key={key}\r\n                index={key}\r\n                details={\r\n                  this.state.searchString\r\n                    ? this.state.filteredIssues[key]\r\n                    : this.state.issues[key]\r\n                }\r\n                deleteIssue={this.deleteIssue}\r\n                completeIssue={this.completeIssue}\r\n                updateIssue={this.updateIssue}\r\n                addIssue={this.addIssue}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport SignIn from \"./SignIn\";\r\n// import Login from './Login'\r\nimport App from \"./App\";\r\nimport InvalidAuth from \"./InvalidAuth\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path='/'\r\n        component={SignIn}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/BugTracker/:userId'\r\n        component={App}\r\n      />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport SignIn from './components/SignIn';\r\nimport App from './components/App'\r\nimport Router from './components/Router'\r\nimport './css/style.css'\r\n\r\nrender(<Router/>, document.querySelector('#main'))"],"sourceRoot":""}